/*
 * Copyright (c) 2000-2014 Apple Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 * 
 * This file contains Original Code and/or Modifications of Original Code
 * as defined in and that are subject to the Apple Public Source License
 * Version 2.0 (the 'License'). You may not use this file except in
 * compliance with the License. Please obtain a copy of the License at
 * http://www.opensource.apple.com/apsl/ and read it before using this
 * file.
 * 
 * The Original Code and all software distributed under the License are
 * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
 * Please see the License for the specific language governing rights and
 * limitations under the License.
 * 
 * @APPLE_LICENSE_HEADER_END@
 */

/*
 * This file is automatically generated
 * DO NOT EDIT!
 */

/*
 * Generic Keys
 *
 *   kSCPropConfirmedInterfaceName                      "ConfirmedInterfaceName"       CFString
 *
 * Preference Keys
 *
 *   kSCPrefVirtualNetworkInterfaces                    "VirtualNetworkInterfaces"     CFDictionary
 *
 * Network Entity Keys
 *
 *   kSCEntNetActiveDuringSleepRequested                "ActiveDuringSleepRequested"   CFDictionary
 *   kSCEntNetActiveDuringSleepSupported                "ActiveDuringSleepSupported"   CFDictionary
 *   kSCEntNetAppLayer                                  "AppLayer"                     CFDictionary
 *   kSCEntNetCommCenter                                "com.apple.CommCenter"         CFDictionary
 *   kSCEntNetEAPOL                                     "EAPOL"                        CFDictionary
 *   kSCEntNetIPv4RouterARPFailure                      "IPv4RouterARPFailure"
 *   kSCEntNetIPv4RouterARPAlive                        "IPv4RouterARPAlive"
 *   kSCEntNetLinkIssues                                "LinkIssues"                   CFDictionary
 *   kSCEntNetLinkQuality                               "LinkQuality"                  CFDictionary
 *   kSCEntNetLoopback                                  "Loopback"                     CFDictionary
 *   kSCEntNetOnDemand                                  "OnDemand"                     CFDictionary
 *   kSCEntNetService                                   "__SERVICE__"                  CFDictionary
 *   kSCEntNetVPN                                       "VPN"                          CFDictionary
 *
 * kSCCompNetwork Properties
 *
 *   kSCPropNetIgnoreLinkStatus                         "IgnoreLinkStatus"             CFBoolean
 *
 * kSCEntNetCommCenter Entity Keys
 *
 *   kSCPropNetCommCenterAllowNetworkAccess             "AllowNetworkAccess"           CFNumber (0 or 1)
 *   kSCPropNetCommCenterAvailable                      "Available"                    CFNumber (0 or 1)
 *
 * kSCEntNetDNS Entity Keys
 *
 *   kSCPropNetDNSServiceIdentifier                     "ServiceIdentifier"            CFNumber
 *   kSCPropNetDNSSupplementalMatchDomainsNoSearch      "SupplementalMatchDomainsNoSearch" CFNumber (0 or 1)
 *
 * kSCEntNetEthernet (Hardware) Entity Keys
 *
 *   kSCPropNetEthernetCapabilityAV                     "AV"                           CFNumber (0 or 1)
 *   kSCPropNetEthernetCapabilityJUMBO_MTU              "JUMBO_MTU"                    CFNumber (0 or 1)
 *   kSCPropNetEthernetCapabilityLRO                    "LRO"                          CFNumber (0 or 1)
 *   kSCPropNetEthernetCapabilityRXCSUM                 "RXCSUM"                       CFNumber (0 or 1)
 *   kSCPropNetEthernetCapabilityTSO                    "TSO"                          CFNumber (0 or 1)
 *   kSCPropNetEthernetCapabilityTSO4                   "TSO4"                         CFNumber (0 or 1)
 *   kSCPropNetEthernetCapabilityTSO6                   "TSO6"                         CFNumber (0 or 1)
 *   kSCPropNetEthernetCapabilityTXCSUM                 "TXCSUM"                       CFNumber (0 or 1)
 *   kSCPropNetEthernetCapabilityVLAN_HWTAGGING         "VLAN_HWTAGGING"               CFNumber (0 or 1)
 *   kSCPropNetEthernetCapabilityVLAN_MTU               "VLAN_MTU"                     CFNumber (0 or 1)
 *
 * kSCEntNetInterface Entity Keys
 *
 *   --- kSCPropNetInterfaceType values ---
 *   kSCValNetInterfaceTypeCellular                     "Cellular"
 *   kSCValNetInterfaceTypeLoopback                     "Loopback"
 *   kSCValNetInterfaceTypeVPN                          "VPN"
 *
 *   kSCPropNetIPSecDisconnectOnWake                    "DisconnectOnWake"             CFNumber (0 or 1)
 *   kSCPropNetIPSecDisconnectOnWakeTimer               "DisconnectOnWakeTimer"        CFNumber
 * kSCEntNetIPSec Entity Keys
 *
 *   kSCPropNetIPSecLastCause                           "LastCause"                    CFNumber
 *
 *   --- OnDemand: ---
 *   kSCPropNetIPSecOnDemandEnabled                     "OnDemandEnabled"              CFNumber (0 or 1)
 *   kSCPropNetIPSecOnDemandMatchDomainsAlways          "OnDemandMatchDomainsAlways"   CFArray[CFString]
 *   kSCPropNetIPSecOnDemandMatchDomainsOnRetry         "OnDemandMatchDomainsOnRetry"  CFArray[CFString]
 *   kSCPropNetIPSecOnDemandMatchDomainsNever           "OnDemandMatchDomainsNever"    CFArray[CFString]
 *
 * kSCEntNetIPv4 Entity Keys
 *
 *   kSCPropNetIPv4AdditionalRoutes                     "AdditionalRoutes"             CFArray[CFDictionary]
 *   kSCPropNetIPv4ExcludedRoutes                       "ExcludedRoutes"               CFArray[CFDictionary]
 *   kSCPropNetIPv4IncludedRoutes                       "IncludedRoutes"               CFArray[CFDictionary]
 *
 *   --- kSCPropNetIPv4ConfigMethod values ---
 *   kSCValNetIPv4ConfigMethodFailover                  "Failover"
 *
 *   --- kSCPropNetIPv4AdditionalRoutes, kSCPropNetIPv4ExcludedRoutes, kSCPropNetIPv4IncludedRoutes [CFDictionary] keys ---
 *   kSCPropNetIPv4RouteDestinationAddress              "DestinationAddress"           CFString
 *   kSCPropNetIPv4RouteSubnetMask                      "SubnetMask"                   CFString
 *   kSCPropNetIPv4RouteGatewayAddress                  "GatewayAddress"               CFString
 *   kSCPropNetIPv4RouteInterfaceName                   "InterfaceName"                CFString
 *
 *   kSCPropNetIPv4ARPResolvedHardwareAddress           "ARPResolvedHardwareAddress"   CFString
 *   kSCPropNetIPv4ARPResolvedIPAddress                 "ARPResolvedIPAddress"         CFString
 *
 * kSCEntNetIPv6 Entity Keys
 *
 *   kSCPropNetIPv6AdditionalRoutes                     "AdditionalRoutes"             CFArray[CFDictionary]
 *   kSCPropNetIPv6ExcludedRoutes                       "ExcludedRoutes"               CFArray[CFDictionary]
 *   kSCPropNetIPv6IncludedRoutes                       "IncludedRoutes"               CFArray[CFDictionary]
 *
 *   --- kSCPropNetIPv6AdditionalRoutes, kSCPropNetIPv6IncludedRoutes, kSCPropNetIPv6ExcludedRoutes [CFDictionary] keys ---
 *   kSCPropNetIPv6RouteDestinationAddress              "DestinationAddress"           CFString
 *   kSCPropNetIPv6RoutePrefixLength                    "PrefixLength"                 CFNumber
 *   kSCPropNetIPv6RouteGatewayAddress                  "GatewayAddress"               CFString
 *   kSCPropNetIPv6RouteInterfaceName                   "InterfaceName"                CFString
 *
 * kSCEntNetLink Entity Keys
 *
 *   kSCPropNetLinkExpensive                            "Expensive"                    CFBoolean
 *
 * kSCEntNetLinkIssues Entity Keys
 *
 *   kSCPropNetLinkIssuesModuleID                       "ModuleID"                     CFData
 *   kSCPropNetLinkIssuesInfo                           "Info"                         CFData
 *   kSCPropNetLinkIssuesTimeStamp                      "TimeStamp"                    CFDate
 *
 * kSCEntNetLinkQuality Entity Keys
 *
 *   kSCPropNetLinkQuality                              "LinkQuality"                  CFNumber
 *
 *   kSCPropNetPPPDisconnectOnWake                      "DisconnectOnWake"             CFNumber (0 or 1)
 *   kSCPropNetPPPDisconnectOnWakeTimer                 "DisconnectOnWakeTimer"        CFNumber
 * kSCEntNetPPP Entity Keys
 *
 *   --- OnDemand: ---
 *   kSCPropNetPPPOnDemandDomains                       "OnDemandDomains"              CFArray[CFString]
 *   kSCPropNetPPPOnDemandEnabled                       "OnDemandEnabled"              CFNumber (0 or 1)
 *   kSCPropNetPPPOnDemandHostName                      "OnDemandHostName"             CFString
 *   kSCPropNetPPPOnDemandMatchDomainsAlways            "OnDemandMatchDomainsAlways"   CFArray[CFString]
 *   kSCPropNetPPPOnDemandMatchDomainsOnRetry           "OnDemandMatchDomainsOnRetry"  CFArray[CFString]
 *   kSCPropNetPPPOnDemandMatchDomainsNever             "OnDemandMatchDomainsNever"    CFArray[CFString]
 *   kSCPropNetPPPOnDemandMode                          "OnDemandMode"                 CFString
 *   kSCPropNetPPPOnDemandPriority                      "OnDemandPriority"             CFString
 *
 *   --- kSCPropNetPPPOnDemandMode values ---
 *   kSCValNetPPPOnDemandModeAggressive                 "Aggressive"
 *   kSCValNetPPPOnDemandModeConservative               "Conservative"
 *   kSCValNetPPPOnDemandModeCompatible                 "Compatible"
 *
 *   --- kSCPropNetPPPOnDemandPriority values ---
 *   kSCValNetPPPOnDemandPriorityDefault                "Default"
 *   kSCValNetPPPOnDemandPriorityHigh                   "High"
 *   kSCValNetPPPOnDemandPriorityLow                    "Low"
 *
 * kSCEntNetProxies Entity Keys
 *
 *   kSCPropNetProxiesBypassAllowed                     "BypassAllowed"                CFNumber (0 or 1)
 *   kSCPropNetProxiesFallBackAllowed                   "FallBackAllowed"              CFNumber (0 or 1)
 *   kSCPropNetProxiesSupplementalMatchDomains          "SupplementalMatchDomains"     CFArray[CFString]
 *   kSCPropNetProxiesSupplementalMatchOrders           "SupplementalMatchOrders"      CFArray[CFNumber]
 *
 *   kSCPropNetProxiesScoped                            "__SCOPED__"                   CFDictionary
 *   kSCPropNetProxiesServices                          "__SERVICES__"                 CFDictionary
 *   kSCPropNetProxiesSupplemental                      "__SUPPLEMENTAL__"             CFArray[CFDictionary]
 *   kSCPropNetProxiesSupplementalMatchDomain           "__MATCH_DOMAIN__"             CFString
 *
 * kSCEntNetService Entity Keys
 *
 *   kSCPropNetServicePrimaryRank                       "PrimaryRank"                  CFString
 *   kSCPropNetServiceUserDefinedName                   "UserDefinedName"              CFString
 *
 *   --- kSCPropNetServicePrimaryRank values ---
 *   kSCValNetServicePrimaryRankFirst                   "First"
 *   kSCValNetServicePrimaryRankLast                    "Last"
 *   kSCValNetServicePrimaryRankNever                   "Never"
 *   kSCValNetServicePrimaryRankScoped                  "Scoped"
 *
 * kSCEntNetVPN Entity Keys
 *
 *   kSCPropNetVPNAppRules                              "AppRules"                     CFArray[CFDictionary]
 *   kSCPropNetVPNAuthCredentialPassword                "AuthCredentialPassword"       CFString
 *   kSCPropNetVPNAuthName                              "AuthName"                     CFString
 *   kSCPropNetVPNAuthPassword                          "AuthPassword"                 CFString
 *   kSCPropNetVPNAuthPasswordEncryption                "AuthPasswordEncryption"       CFString
 *   kSCPropNetVPNAuthPasswordPluginType                "AuthPasswordPluginType"       CFString
 *   kSCPropNetVPNAuthenticationMethod                  "AuthenticationMethod"         CFString
 *   kSCPropNetVPNConnectTime                           "ConnectTime"                  CFString
 *   kSCPropNetVPNDisconnectOnFastUserSwitch            "DisconnectOnFastUserSwitch"   CFNumber (0 or 1)
 *   kSCPropNetVPNDisconnectOnIdle                      "DisconnectOnIdle"             CFNumber (0 or 1)
 *   kSCPropNetVPNDisconnectOnIdleTimer                 "DisconnectOnIdleTimer"        CFNumber
 *   kSCPropNetVPNDisconnectOnLogout                    "DisconnectOnLogout"           CFNumber (0 or 1)
 *   kSCPropNetVPNDisconnectOnSleep                     "DisconnectOnSleep"            CFNumber (0 or 1)
 *   kSCPropNetVPNDisconnectOnWake                      "DisconnectOnWake"             CFNumber (0 or 1)
 *   kSCPropNetVPNDisconnectOnWakeTimer                 "DisconnectOnWakeTimer"        CFNumber
 *   kSCPropNetVPNLocalCertificate                      "LocalCertificate"             CFData
 *   kSCPropNetVPNLogfile                               "Logfile"                      CFString
 *   kSCPropNetVPNMTU                                   "MTU"                          CFNumber
 *   kSCPropNetVPNOnDemandEnabled                       "OnDemandEnabled"              CFNumber (0 or 1)
 *   kSCPropNetVPNOnDemandMatchAppEnabled               "OnDemandMatchAppEnabled"      CFBoolean
 *   kSCPropNetVPNOnDemandMatchDomainsAlways            "OnDemandMatchDomainsAlways"   CFArray[CFString]
 *   kSCPropNetVPNOnDemandMatchDomainsOnRetry           "OnDemandMatchDomainsOnRetry"  CFArray[CFString]
 *   kSCPropNetVPNOnDemandMatchDomainsNever             "OnDemandMatchDomainsNever"    CFArray[CFString]
 *   kSCPropNetVPNOnDemandRules                         "OnDemandRules"                CFArray[CFDictionary]
 *   kSCPropNetVPNOnDemandSuspended                     "OnDemandSuspended"            CFNumber
 *   kSCPropNetVPNPluginCapability                      "PluginCapability"             CFString
 *   kSCPropNetVPNRemoteAddress                         "RemoteAddress"                CFString
 *   kSCPropNetVPNStatus                                "Status"                       CFNumber
 *   kSCPropNetVPNVerboseLogging                        "VerboseLogging"               CFNumber (0 or 1)
 *
 *   --- kSCPropNetVPNAppRules [CFDictionary] keys ---
 *   kSCValNetVPNAppRuleAccountIdentifierMatch          "AccountIdentifierMatch"       CFArray[CFString]
 *   kSCValNetVPNAppRuleDNSDomainMatch                  "DNSDomainMatch"               CFArray[CFString]
 *   kSCValNetVPNAppRuleExecutableMatch                 "ExecutableMatch"              CFArray[CFDictionary]
 *   kSCValNetVPNAppRuleIdentifier                      "Identifier"                   CFString
 *
 *   --- kSCValNetVPNAppRuleExecutableMatch [CFDictionary] keys ---
 *   kSCValNetVPNAppRuleExecutableDesignatedRequirement "DesignatedRequirement"        CFString
 *   kSCValNetVPNAppRuleExecutableSigningIdentifier     "SigningIdentifier"            CFString
 *   kSCValNetVPNAppRuleExecutableUUID                  "UUID"                         CFString
 *
 *   --- kSCPropNetVPNAuthenticationMethod values ---
 *   kSCValNetVPNAuthenticationMethodPassword           "Password"
 *   kSCValNetVPNAuthenticationMethodCertificate        "Certificate"
 *
 *   --- kSCPropNetVPNAuthPasswordEncryption values ---
 *   kSCValNetVPNAuthPasswordEncryptionExternal         "External"
 *   kSCValNetVPNAuthPasswordEncryptionKeychain         "Keychain"
 *   kSCValNetVPNAuthPasswordEncryptionPrompt           "Prompt"
 *
 *   --- kSCPropNetVPNOnDemandRules [CFDictionary] keys ---
 *   kSCPropNetVPNOnDemandRuleAction                    "Action"                       CFString
 *   kSCPropNetVPNOnDemandRuleActionParameters          "ActionParameters"             CFArray[CFDictionary]
 *   kSCPropNetVPNOnDemandRuleDNSDomainMatch            "DNSDomainMatch"               CFArray[CFString]
 *   kSCPropNetVPNOnDemandRuleDNSServerAddressMatch     "DNSServerAddressMatch"        CFArray[CFString]
 *   kSCPropNetVPNOnDemandRuleSSIDMatch                 "SSIDMatch"                    CFArray[CFString]
 *   kSCPropNetVPNOnDemandRuleInterfaceTypeMatch        "InterfaceTypeMatch"           CFString
 *   kSCPropNetVPNOnDemandRuleURLStringProbe            "URLStringProbe"               CFString
 *
 *   --- kSCPropNetVPNOnDemandRuleAction values ---
 *   kSCValNetVPNOnDemandRuleActionAllow                "Allow"
 *   kSCValNetVPNOnDemandRuleActionIgnore               "Ignore"
 *   kSCValNetVPNOnDemandRuleActionConnect              "Connect"
 *   kSCValNetVPNOnDemandRuleActionDisconnect           "Disconnect"
 *   kSCValNetVPNOnDemandRuleActionEvaluateConnection   "EvaluateConnection"
 *
 *   --- kSCPropNetVPNOnDemandRuleActionParameters [CFDictionary] keys ---
 *   kSCPropNetVPNOnDemandRuleActionParametersDomainAction "DomainAction"                 CFString
 *   kSCPropNetVPNOnDemandRuleActionParametersDomains   "Domains"                      CFArray[CFString]
 *   kSCPropNetVPNOnDemandRuleActionParametersRequiredDNSServers "RequiredDNSServers"           CFArray[CFString]
 *   kSCPropNetVPNOnDemandRuleActionParametersRequiredURLStringProbe "RequiredURLStringProbe"       CFString
 *
 *   --- kSCPropNetVPNOnDemandRuleActionParametersDomainAction values ---
 *   kSCValNetVPNOnDemandRuleActionParametersDomainActionConnectIfNeeded "ConnectIfNeeded"
 *   kSCValNetVPNOnDemandRuleActionParametersDomainActionNeverConnect "NeverConnect"
 *
 *   --- kSCPropNetVPNOnDemandRuleInterfaceTypeMatch values ---
 *   kSCValNetVPNOnDemandRuleInterfaceTypeMatchCellular "Cellular"
 *   kSCValNetVPNOnDemandRuleInterfaceTypeMatchEthernet "Ethernet"
 *   kSCValNetVPNOnDemandRuleInterfaceTypeMatchWiFi     "WiFi"
 *
 *   --- kSCPropNetVPNPluginCapability values ---
 *   kSCValNetVPNPluginCapabilityAuth                   "Auth"
 *   kSCValNetVPNPluginCapabilityConnect                "Connect"
 *
 * kSCCompSystem Properties
 *
 *   kSCPropSystemComputerNameRegion                    "ComputerNameRegion"           CFNumber
 *   kSCPropSystemHostName                              "HostName"                     CFString
 *
 * Virtual Network Interface Keys
 *
 *   kSCPropVirtualNetworkInterfacesBondInterfaces      "Interfaces"                   CFArray[CFString]
 *   kSCPropVirtualNetworkInterfacesBondMode            "Mode"                         CFNumber
 *   kSCPropVirtualNetworkInterfacesBondOptions         "Options"                      CFDictionary
 *
 *   kSCPropVirtualNetworkInterfacesBridgeInterfaces    "Interfaces"                   CFArray[CFString]
 *   kSCPropVirtualNetworkInterfacesBridgeOptions       "Options"                      CFDictionary
 *
 *   kSCPropVirtualNetworkInterfacesVLANInterface       "Interface"                    CFString
 *   kSCPropVirtualNetworkInterfacesVLANTag             "Tag"                          CFNumber
 *   kSCPropVirtualNetworkInterfacesVLANOptions         "Options"                      CFDictionary
 */


#ifndef _SCSCHEMADEFINITIONSPRIVATE_H
#define _SCSCHEMADEFINITIONSPRIVATE_H

/* -------------------- Macro declarations -------------------- */

#include <SystemConfiguration/SCSchemaDefinitions.h>

/* -------------------- HeaderDoc comments -------------------- */


#if	0
/*!
 *	@header SCSchemaDefinitionsPrivate
 */

/*!
  @const kSCPropConfirmedInterfaceName
  @availability Introduced in Mac OS X 10.10.
 */
extern const CFStringRef kSCPropConfirmedInterfaceName;

/*!
  @group Preference Keys
 */

/*!
  @const kSCPrefVirtualNetworkInterfaces
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPrefVirtualNetworkInterfaces;

/*!
  @group Network Entity Keys
 */

/*!
  @const kSCEntNetActiveDuringSleepRequested
  @availability Introduced in Mac OS X 10.10.
 */
extern const CFStringRef kSCEntNetActiveDuringSleepRequested;

/*!
  @const kSCEntNetActiveDuringSleepSupported
  @availability Introduced in Mac OS X 10.10.
 */
extern const CFStringRef kSCEntNetActiveDuringSleepSupported;

/*!
  @const kSCEntNetAppLayer
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCEntNetAppLayer;

/*!
  @const kSCEntNetCommCenter
  @availability Introduced in iPhone OS 2.0.
 */
extern const CFStringRef kSCEntNetCommCenter;

/*!
  @const kSCEntNetEAPOL
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCEntNetEAPOL;

/*!
  @const kSCEntNetIPv4RouterARPFailure
  @availability Introduced in Mac OS X 10.10.
 */
extern const CFStringRef kSCEntNetIPv4RouterARPFailure;

/*!
  @const kSCEntNetIPv4RouterARPAlive
  @availability Introduced in Mac OS X 10.10.
 */
extern const CFStringRef kSCEntNetIPv4RouterARPAlive;

/*!
  @const kSCEntNetLinkIssues
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCEntNetLinkIssues;

/*!
  @const kSCEntNetLinkQuality
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCEntNetLinkQuality;

/*!
  @const kSCEntNetLoopback
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCEntNetLoopback;

/*!
  @const kSCEntNetOnDemand
  @availability Introduced in Mac OS X 10.6.
 */
extern const CFStringRef kSCEntNetOnDemand;

/*!
  @const kSCEntNetService
  @availability Introduced in Mac OS X 10.6.
 */
extern const CFStringRef kSCEntNetService;

/*!
  @const kSCEntNetVPN
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCEntNetVPN;

/*!
  @group kSCCompNetwork Properties
 */

/*!
  @const kSCPropNetIgnoreLinkStatus
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropNetIgnoreLinkStatus;

/*!
  @group kSCEntNetCommCenter Entity Keys
 */

/*!
  @const kSCPropNetCommCenterAllowNetworkAccess
  @availability Introduced in iPhone OS 2.0.
 */
extern const CFStringRef kSCPropNetCommCenterAllowNetworkAccess;

/*!
  @const kSCPropNetCommCenterAvailable
  @availability Introduced in iPhone OS 2.0.
 */
extern const CFStringRef kSCPropNetCommCenterAvailable;

/*!
  @group kSCEntNetDNS Entity Keys
 */

/*!
  @const kSCPropNetDNSServiceIdentifier
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetDNSServiceIdentifier;

/*!
  @const kSCPropNetDNSSupplementalMatchDomainsNoSearch
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetDNSSupplementalMatchDomainsNoSearch;

/*!
  @group kSCEntNetEthernet (Hardware) Entity Keys
 */

/*!
  @const kSCPropNetEthernetCapabilityAV
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetEthernetCapabilityAV;

/*!
  @const kSCPropNetEthernetCapabilityJUMBO_MTU
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetEthernetCapabilityJUMBO_MTU;

/*!
  @const kSCPropNetEthernetCapabilityLRO
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetEthernetCapabilityLRO;

/*!
  @const kSCPropNetEthernetCapabilityRXCSUM
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetEthernetCapabilityRXCSUM;

/*!
  @const kSCPropNetEthernetCapabilityTSO
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetEthernetCapabilityTSO;

/*!
  @const kSCPropNetEthernetCapabilityTSO4
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetEthernetCapabilityTSO4;

/*!
  @const kSCPropNetEthernetCapabilityTSO6
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetEthernetCapabilityTSO6;

/*!
  @const kSCPropNetEthernetCapabilityTXCSUM
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetEthernetCapabilityTXCSUM;

/*!
  @const kSCPropNetEthernetCapabilityVLAN_HWTAGGING
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetEthernetCapabilityVLAN_HWTAGGING;

/*!
  @const kSCPropNetEthernetCapabilityVLAN_MTU
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetEthernetCapabilityVLAN_MTU;

/*!
  @group kSCEntNetInterface Entity Keys
 */

/*!
  @const kSCValNetInterfaceTypeCellular
  @availability Introduced in Mac OS X 10.10.
 */
extern const CFStringRef kSCValNetInterfaceTypeCellular;

/*!
  @const kSCValNetInterfaceTypeLoopback
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCValNetInterfaceTypeLoopback;

/*!
  @const kSCValNetInterfaceTypeVPN
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCValNetInterfaceTypeVPN;

/*!
  @const kSCPropNetIPSecDisconnectOnWake
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetIPSecDisconnectOnWake;

/*!
  @const kSCPropNetIPSecDisconnectOnWakeTimer
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetIPSecDisconnectOnWakeTimer;

/*!
  @group kSCEntNetIPSec Entity Keys
 */

/*!
  @const kSCPropNetIPSecLastCause
  @availability Introduced in Mac OS X 10.6.
 */
extern const CFStringRef kSCPropNetIPSecLastCause;

/*!
  @const kSCPropNetIPSecOnDemandEnabled
  @availability Introduced in Mac OS X 10.6.
 */
extern const CFStringRef kSCPropNetIPSecOnDemandEnabled;

/*!
  @const kSCPropNetIPSecOnDemandMatchDomainsAlways
  @availability Introduced in Mac OS X 10.6.
 */
extern const CFStringRef kSCPropNetIPSecOnDemandMatchDomainsAlways;

/*!
  @const kSCPropNetIPSecOnDemandMatchDomainsOnRetry
  @availability Introduced in Mac OS X 10.6.
 */
extern const CFStringRef kSCPropNetIPSecOnDemandMatchDomainsOnRetry;

/*!
  @const kSCPropNetIPSecOnDemandMatchDomainsNever
  @availability Introduced in Mac OS X 10.6.
 */
extern const CFStringRef kSCPropNetIPSecOnDemandMatchDomainsNever;

/*!
  @group kSCEntNetIPv4 Entity Keys
 */

/*!
  @const kSCPropNetIPv4AdditionalRoutes
  @availability Introduced in Mac OS X 10.10.
 */
extern const CFStringRef kSCPropNetIPv4AdditionalRoutes;

/*!
  @const kSCPropNetIPv4ExcludedRoutes
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetIPv4ExcludedRoutes;

/*!
  @const kSCPropNetIPv4IncludedRoutes
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetIPv4IncludedRoutes;

/*!
  @const kSCValNetIPv4ConfigMethodFailover
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCValNetIPv4ConfigMethodFailover;

/*!
  @const kSCPropNetIPv4RouteDestinationAddress
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetIPv4RouteDestinationAddress;

/*!
  @const kSCPropNetIPv4RouteSubnetMask
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetIPv4RouteSubnetMask;

/*!
  @const kSCPropNetIPv4RouteGatewayAddress
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetIPv4RouteGatewayAddress;

/*!
  @const kSCPropNetIPv4RouteInterfaceName
  @availability Introduced in Mac OS X 10.10.
 */
extern const CFStringRef kSCPropNetIPv4RouteInterfaceName;

/*!
  @const kSCPropNetIPv4ARPResolvedHardwareAddress
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetIPv4ARPResolvedHardwareAddress;

/*!
  @const kSCPropNetIPv4ARPResolvedIPAddress
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetIPv4ARPResolvedIPAddress;

/*!
  @group kSCEntNetIPv6 Entity Keys
 */

/*!
  @const kSCPropNetIPv6AdditionalRoutes
  @availability Introduced in Mac OS X 10.10.
 */
extern const CFStringRef kSCPropNetIPv6AdditionalRoutes;

/*!
  @const kSCPropNetIPv6ExcludedRoutes
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetIPv6ExcludedRoutes;

/*!
  @const kSCPropNetIPv6IncludedRoutes
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetIPv6IncludedRoutes;

/*!
  @const kSCPropNetIPv6RouteDestinationAddress
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetIPv6RouteDestinationAddress;

/*!
  @const kSCPropNetIPv6RoutePrefixLength
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetIPv6RoutePrefixLength;

/*!
  @const kSCPropNetIPv6RouteGatewayAddress
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetIPv6RouteGatewayAddress;

/*!
  @const kSCPropNetIPv6RouteInterfaceName
  @availability Introduced in Mac OS X 10.10.
 */
extern const CFStringRef kSCPropNetIPv6RouteInterfaceName;

/*!
  @group kSCEntNetLink Entity Keys
 */

/*!
  @const kSCPropNetLinkExpensive
  @availability Introduced in Mac OS X 10.10.
 */
extern const CFStringRef kSCPropNetLinkExpensive;

/*!
  @group kSCEntNetLinkIssues Entity Keys
 */

/*!
  @const kSCPropNetLinkIssuesModuleID
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetLinkIssuesModuleID;

/*!
  @const kSCPropNetLinkIssuesInfo
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetLinkIssuesInfo;

/*!
  @const kSCPropNetLinkIssuesTimeStamp
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetLinkIssuesTimeStamp;

/*!
  @group kSCEntNetLinkQuality Entity Keys
 */

/*!
  @const kSCPropNetLinkQuality
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetLinkQuality;

/*!
  @const kSCPropNetPPPDisconnectOnWake
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetPPPDisconnectOnWake;

/*!
  @const kSCPropNetPPPDisconnectOnWakeTimer
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetPPPDisconnectOnWakeTimer;

/*!
  @group kSCEntNetPPP Entity Keys
 */

/*!
  @const kSCPropNetPPPOnDemandDomains
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropNetPPPOnDemandDomains;

/*!
  @const kSCPropNetPPPOnDemandEnabled
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropNetPPPOnDemandEnabled;

/*!
  @const kSCPropNetPPPOnDemandHostName
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropNetPPPOnDemandHostName;

/*!
  @const kSCPropNetPPPOnDemandMatchDomainsAlways
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetPPPOnDemandMatchDomainsAlways;

/*!
  @const kSCPropNetPPPOnDemandMatchDomainsOnRetry
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetPPPOnDemandMatchDomainsOnRetry;

/*!
  @const kSCPropNetPPPOnDemandMatchDomainsNever
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetPPPOnDemandMatchDomainsNever;

/*!
  @const kSCPropNetPPPOnDemandMode
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropNetPPPOnDemandMode;

/*!
  @const kSCPropNetPPPOnDemandPriority
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropNetPPPOnDemandPriority;

/*!
  @const kSCValNetPPPOnDemandModeAggressive
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCValNetPPPOnDemandModeAggressive;

/*!
  @const kSCValNetPPPOnDemandModeConservative
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCValNetPPPOnDemandModeConservative;

/*!
  @const kSCValNetPPPOnDemandModeCompatible
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCValNetPPPOnDemandModeCompatible;

/*!
  @const kSCValNetPPPOnDemandPriorityDefault
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCValNetPPPOnDemandPriorityDefault;

/*!
  @const kSCValNetPPPOnDemandPriorityHigh
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCValNetPPPOnDemandPriorityHigh;

/*!
  @const kSCValNetPPPOnDemandPriorityLow
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCValNetPPPOnDemandPriorityLow;

/*!
  @group kSCEntNetProxies Entity Keys
 */

/*!
  @const kSCPropNetProxiesBypassAllowed
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetProxiesBypassAllowed;

/*!
  @const kSCPropNetProxiesFallBackAllowed
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetProxiesFallBackAllowed;

/*!
  @const kSCPropNetProxiesSupplementalMatchDomains
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetProxiesSupplementalMatchDomains;

/*!
  @const kSCPropNetProxiesSupplementalMatchOrders
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetProxiesSupplementalMatchOrders;

/*!
  @const kSCPropNetProxiesScoped
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetProxiesScoped;

/*!
  @const kSCPropNetProxiesServices
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetProxiesServices;

/*!
  @const kSCPropNetProxiesSupplemental
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetProxiesSupplemental;

/*!
  @const kSCPropNetProxiesSupplementalMatchDomain
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetProxiesSupplementalMatchDomain;

/*!
  @group kSCEntNetService Entity Keys
 */

/*!
  @const kSCPropNetServicePrimaryRank
  @availability Introduced in Mac OS X 10.6.
 */
extern const CFStringRef kSCPropNetServicePrimaryRank;

/*!
  @const kSCPropNetServiceUserDefinedName
  @availability Introduced in Mac OS X 10.6.
 */
extern const CFStringRef kSCPropNetServiceUserDefinedName;

/*!
  @const kSCValNetServicePrimaryRankFirst
  @availability Introduced in Mac OS X 10.6.
 */
extern const CFStringRef kSCValNetServicePrimaryRankFirst;

/*!
  @const kSCValNetServicePrimaryRankLast
  @availability Introduced in Mac OS X 10.6.
 */
extern const CFStringRef kSCValNetServicePrimaryRankLast;

/*!
  @const kSCValNetServicePrimaryRankNever
  @availability Introduced in Mac OS X 10.6.
 */
extern const CFStringRef kSCValNetServicePrimaryRankNever;

/*!
  @const kSCValNetServicePrimaryRankScoped
  @availability Introduced in Mac OS X 10.10.
 */
extern const CFStringRef kSCValNetServicePrimaryRankScoped;

/*!
  @group kSCEntNetVPN Entity Keys
 */

/*!
  @const kSCPropNetVPNAppRules
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNAppRules;

/*!
  @const kSCPropNetVPNAuthCredentialPassword
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNAuthCredentialPassword;

/*!
  @const kSCPropNetVPNAuthName
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNAuthName;

/*!
  @const kSCPropNetVPNAuthPassword
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNAuthPassword;

/*!
  @const kSCPropNetVPNAuthPasswordEncryption
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNAuthPasswordEncryption;

/*!
  @const kSCPropNetVPNAuthPasswordPluginType
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNAuthPasswordPluginType;

/*!
  @const kSCPropNetVPNAuthenticationMethod
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNAuthenticationMethod;

/*!
  @const kSCPropNetVPNConnectTime
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNConnectTime;

/*!
  @const kSCPropNetVPNDisconnectOnFastUserSwitch
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNDisconnectOnFastUserSwitch;

/*!
  @const kSCPropNetVPNDisconnectOnIdle
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNDisconnectOnIdle;

/*!
  @const kSCPropNetVPNDisconnectOnIdleTimer
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNDisconnectOnIdleTimer;

/*!
  @const kSCPropNetVPNDisconnectOnLogout
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNDisconnectOnLogout;

/*!
  @const kSCPropNetVPNDisconnectOnSleep
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNDisconnectOnSleep;

/*!
  @const kSCPropNetVPNDisconnectOnWake
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNDisconnectOnWake;

/*!
  @const kSCPropNetVPNDisconnectOnWakeTimer
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNDisconnectOnWakeTimer;

/*!
  @const kSCPropNetVPNLocalCertificate
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNLocalCertificate;

/*!
  @const kSCPropNetVPNLogfile
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNLogfile;

/*!
  @const kSCPropNetVPNMTU
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNMTU;

/*!
  @const kSCPropNetVPNOnDemandEnabled
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNOnDemandEnabled;

/*!
  @const kSCPropNetVPNOnDemandMatchAppEnabled
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNOnDemandMatchAppEnabled;

/*!
  @const kSCPropNetVPNOnDemandMatchDomainsAlways
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNOnDemandMatchDomainsAlways;

/*!
  @const kSCPropNetVPNOnDemandMatchDomainsOnRetry
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNOnDemandMatchDomainsOnRetry;

/*!
  @const kSCPropNetVPNOnDemandMatchDomainsNever
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNOnDemandMatchDomainsNever;

/*!
  @const kSCPropNetVPNOnDemandRules
  @availability Introduced in Mac OS X 10.8.
 */
extern const CFStringRef kSCPropNetVPNOnDemandRules;

/*!
  @const kSCPropNetVPNOnDemandSuspended
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNOnDemandSuspended;

/*!
  @const kSCPropNetVPNPluginCapability
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNPluginCapability;

/*!
  @const kSCPropNetVPNRemoteAddress
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNRemoteAddress;

/*!
  @const kSCPropNetVPNStatus
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNStatus;

/*!
  @const kSCPropNetVPNVerboseLogging
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropNetVPNVerboseLogging;

/*!
  @const kSCValNetVPNAppRuleAccountIdentifierMatch
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNAppRuleAccountIdentifierMatch;

/*!
  @const kSCValNetVPNAppRuleDNSDomainMatch
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNAppRuleDNSDomainMatch;

/*!
  @const kSCValNetVPNAppRuleExecutableMatch
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNAppRuleExecutableMatch;

/*!
  @const kSCValNetVPNAppRuleIdentifier
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNAppRuleIdentifier;

/*!
  @const kSCValNetVPNAppRuleExecutableDesignatedRequirement
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNAppRuleExecutableDesignatedRequirement;

/*!
  @const kSCValNetVPNAppRuleExecutableSigningIdentifier
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNAppRuleExecutableSigningIdentifier;

/*!
  @const kSCValNetVPNAppRuleExecutableUUID
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNAppRuleExecutableUUID;

/*!
  @const kSCValNetVPNAuthenticationMethodPassword
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCValNetVPNAuthenticationMethodPassword;

/*!
  @const kSCValNetVPNAuthenticationMethodCertificate
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCValNetVPNAuthenticationMethodCertificate;

/*!
  @const kSCValNetVPNAuthPasswordEncryptionExternal
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNAuthPasswordEncryptionExternal;

/*!
  @const kSCValNetVPNAuthPasswordEncryptionKeychain
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCValNetVPNAuthPasswordEncryptionKeychain;

/*!
  @const kSCValNetVPNAuthPasswordEncryptionPrompt
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCValNetVPNAuthPasswordEncryptionPrompt;

/*!
  @const kSCPropNetVPNOnDemandRuleAction
  @availability Introduced in Mac OS X 10.8.
 */
extern const CFStringRef kSCPropNetVPNOnDemandRuleAction;

/*!
  @const kSCPropNetVPNOnDemandRuleActionParameters
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNOnDemandRuleActionParameters;

/*!
  @const kSCPropNetVPNOnDemandRuleDNSDomainMatch
  @availability Introduced in Mac OS X 10.8.
 */
extern const CFStringRef kSCPropNetVPNOnDemandRuleDNSDomainMatch;

/*!
  @const kSCPropNetVPNOnDemandRuleDNSServerAddressMatch
  @availability Introduced in Mac OS X 10.8.
 */
extern const CFStringRef kSCPropNetVPNOnDemandRuleDNSServerAddressMatch;

/*!
  @const kSCPropNetVPNOnDemandRuleSSIDMatch
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNOnDemandRuleSSIDMatch;

/*!
  @const kSCPropNetVPNOnDemandRuleInterfaceTypeMatch
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNOnDemandRuleInterfaceTypeMatch;

/*!
  @const kSCPropNetVPNOnDemandRuleURLStringProbe
  @availability Introduced in Mac OS X 10.8.
 */
extern const CFStringRef kSCPropNetVPNOnDemandRuleURLStringProbe;

/*!
  @const kSCValNetVPNOnDemandRuleActionAllow
  @availability Introduced in Mac OS X 10.8.
 */
extern const CFStringRef kSCValNetVPNOnDemandRuleActionAllow;

/*!
  @const kSCValNetVPNOnDemandRuleActionIgnore
  @availability Introduced in Mac OS X 10.8.
 */
extern const CFStringRef kSCValNetVPNOnDemandRuleActionIgnore;

/*!
  @const kSCValNetVPNOnDemandRuleActionConnect
  @availability Introduced in Mac OS X 10.8.
 */
extern const CFStringRef kSCValNetVPNOnDemandRuleActionConnect;

/*!
  @const kSCValNetVPNOnDemandRuleActionDisconnect
  @availability Introduced in Mac OS X 10.8.
 */
extern const CFStringRef kSCValNetVPNOnDemandRuleActionDisconnect;

/*!
  @const kSCValNetVPNOnDemandRuleActionEvaluateConnection
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNOnDemandRuleActionEvaluateConnection;

/*!
  @const kSCPropNetVPNOnDemandRuleActionParametersDomainAction
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNOnDemandRuleActionParametersDomainAction;

/*!
  @const kSCPropNetVPNOnDemandRuleActionParametersDomains
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNOnDemandRuleActionParametersDomains;

/*!
  @const kSCPropNetVPNOnDemandRuleActionParametersRequiredDNSServers
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNOnDemandRuleActionParametersRequiredDNSServers;

/*!
  @const kSCPropNetVPNOnDemandRuleActionParametersRequiredURLStringProbe
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCPropNetVPNOnDemandRuleActionParametersRequiredURLStringProbe;

/*!
  @const kSCValNetVPNOnDemandRuleActionParametersDomainActionConnectIfNeeded
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNOnDemandRuleActionParametersDomainActionConnectIfNeeded;

/*!
  @const kSCValNetVPNOnDemandRuleActionParametersDomainActionNeverConnect
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNOnDemandRuleActionParametersDomainActionNeverConnect;

/*!
  @const kSCValNetVPNOnDemandRuleInterfaceTypeMatchCellular
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNOnDemandRuleInterfaceTypeMatchCellular;

/*!
  @const kSCValNetVPNOnDemandRuleInterfaceTypeMatchEthernet
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNOnDemandRuleInterfaceTypeMatchEthernet;

/*!
  @const kSCValNetVPNOnDemandRuleInterfaceTypeMatchWiFi
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNOnDemandRuleInterfaceTypeMatchWiFi;

/*!
  @const kSCValNetVPNPluginCapabilityAuth
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNPluginCapabilityAuth;

/*!
  @const kSCValNetVPNPluginCapabilityConnect
  @availability Introduced in Mac OS X 10.9.
 */
extern const CFStringRef kSCValNetVPNPluginCapabilityConnect;

/*!
  @group kSCCompSystem Properties
 */

/*!
  @const kSCPropSystemComputerNameRegion
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropSystemComputerNameRegion;

/*!
  @const kSCPropSystemHostName
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropSystemHostName;

/*!
  @group Virtual Network Interface Keys
 */

/*!
  @const kSCPropVirtualNetworkInterfacesBondInterfaces
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropVirtualNetworkInterfacesBondInterfaces;

/*!
  @const kSCPropVirtualNetworkInterfacesBondMode
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropVirtualNetworkInterfacesBondMode;

/*!
  @const kSCPropVirtualNetworkInterfacesBondOptions
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropVirtualNetworkInterfacesBondOptions;

/*!
  @const kSCPropVirtualNetworkInterfacesBridgeInterfaces
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropVirtualNetworkInterfacesBridgeInterfaces;

/*!
  @const kSCPropVirtualNetworkInterfacesBridgeOptions
  @availability Introduced in Mac OS X 10.7.
 */
extern const CFStringRef kSCPropVirtualNetworkInterfacesBridgeOptions;

/*!
  @const kSCPropVirtualNetworkInterfacesVLANInterface
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropVirtualNetworkInterfacesVLANInterface;

/*!
  @const kSCPropVirtualNetworkInterfacesVLANTag
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropVirtualNetworkInterfacesVLANTag;

/*!
  @const kSCPropVirtualNetworkInterfacesVLANOptions
  @availability Introduced in Mac OS X 10.5.
 */
extern const CFStringRef kSCPropVirtualNetworkInterfacesVLANOptions;

#endif	/* 0 */


/* -------------------- Schema declarations -------------------- */


  SC_SCHEMA_DECLARATION(kSCPropConfirmedInterfaceName, __OSX_AVAILABLE_STARTING(__MAC_10_10,__IPHONE_8_0/*SPI*/))
  #define kSCPropConfirmedInterfaceName                                 \
	  SC_SCHEMA_KV(kSCPropConfirmedInterfaceName                    \
		      ,"ConfirmedInterfaceName"                         \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPrefVirtualNetworkInterfaces, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPrefVirtualNetworkInterfaces                               \
	  SC_SCHEMA_KV(kSCPrefVirtualNetworkInterfaces                  \
		      ,"VirtualNetworkInterfaces"                       \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCEntNetActiveDuringSleepRequested, __OSX_AVAILABLE_STARTING(__MAC_10_10,__IPHONE_7_0/*SPI*/))
  #define kSCEntNetActiveDuringSleepRequested                           \
	  SC_SCHEMA_KV(kSCEntNetActiveDuringSleepRequested              \
		      ,"ActiveDuringSleepRequested"                     \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCEntNetActiveDuringSleepSupported, __OSX_AVAILABLE_STARTING(__MAC_10_10,__IPHONE_7_0/*SPI*/))
  #define kSCEntNetActiveDuringSleepSupported                           \
	  SC_SCHEMA_KV(kSCEntNetActiveDuringSleepSupported              \
		      ,"ActiveDuringSleepSupported"                     \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCEntNetAppLayer, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCEntNetAppLayer                                             \
	  SC_SCHEMA_KV(kSCEntNetAppLayer                                \
		      ,"AppLayer"                                       \
		      ,CFDictionary                                     )


  SC_SCHEMA_DECLARATION(kSCEntNetEAPOL, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCEntNetEAPOL                                                \
	  SC_SCHEMA_KV(kSCEntNetEAPOL                                   \
		      ,"EAPOL"                                          \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCEntNetIPv4RouterARPFailure, __OSX_AVAILABLE_STARTING(__MAC_10_10,__IPHONE_8_0/*SPI*/))
  #define kSCEntNetIPv4RouterARPFailure                                 \
	  SC_SCHEMA_KV(kSCEntNetIPv4RouterARPFailure                    \
		      ,"IPv4RouterARPFailure"                           \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCEntNetIPv4RouterARPAlive, __OSX_AVAILABLE_STARTING(__MAC_10_10,__IPHONE_8_0/*SPI*/))
  #define kSCEntNetIPv4RouterARPAlive                                   \
	  SC_SCHEMA_KV(kSCEntNetIPv4RouterARPAlive                      \
		      ,"IPv4RouterARPAlive"                             \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCEntNetLinkIssues, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCEntNetLinkIssues                                           \
	  SC_SCHEMA_KV(kSCEntNetLinkIssues                              \
		      ,"LinkIssues"                                     \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCEntNetLinkQuality, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCEntNetLinkQuality                                          \
	  SC_SCHEMA_KV(kSCEntNetLinkQuality                             \
		      ,"LinkQuality"                                    \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCEntNetLoopback, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCEntNetLoopback                                             \
	  SC_SCHEMA_KV(kSCEntNetLoopback                                \
		      ,"Loopback"                                       \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCEntNetOnDemand, __OSX_AVAILABLE_STARTING(__MAC_10_6,__IPHONE_3_0/*SPI*/))
  #define kSCEntNetOnDemand                                             \
	  SC_SCHEMA_KV(kSCEntNetOnDemand                                \
		      ,"OnDemand"                                       \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCEntNetService, __OSX_AVAILABLE_STARTING(__MAC_10_6,__IPHONE_2_0/*SPI*/))
  #define kSCEntNetService                                              \
	  SC_SCHEMA_KV(kSCEntNetService                                 \
		      ,"__SERVICE__"                                    \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCEntNetVPN, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCEntNetVPN                                                  \
	  SC_SCHEMA_KV(kSCEntNetVPN                                     \
		      ,"VPN"                                            \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCPropNetIgnoreLinkStatus, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropNetIgnoreLinkStatus                                    \
	  SC_SCHEMA_KV(kSCPropNetIgnoreLinkStatus                       \
		      ,"IgnoreLinkStatus"                               \
		      ,CFBoolean                                        )


  SC_SCHEMA_DECLARATION(kSCPropNetDNSServiceIdentifier, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetDNSServiceIdentifier                                \
	  SC_SCHEMA_KV(kSCPropNetDNSServiceIdentifier                   \
		      ,"ServiceIdentifier"                              \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetDNSSupplementalMatchDomainsNoSearch, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetDNSSupplementalMatchDomainsNoSearch                 \
	  SC_SCHEMA_KV(kSCPropNetDNSSupplementalMatchDomainsNoSearch    \
		      ,"SupplementalMatchDomainsNoSearch"               \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetEthernetCapabilityAV, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetEthernetCapabilityAV                                \
	  SC_SCHEMA_KV(kSCPropNetEthernetCapabilityAV                   \
		      ,"AV"                                             \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetEthernetCapabilityJUMBO_MTU, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetEthernetCapabilityJUMBO_MTU                         \
	  SC_SCHEMA_KV(kSCPropNetEthernetCapabilityJUMBO_MTU            \
		      ,"JUMBO_MTU"                                      \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetEthernetCapabilityLRO, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetEthernetCapabilityLRO                               \
	  SC_SCHEMA_KV(kSCPropNetEthernetCapabilityLRO                  \
		      ,"LRO"                                            \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetEthernetCapabilityRXCSUM, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetEthernetCapabilityRXCSUM                            \
	  SC_SCHEMA_KV(kSCPropNetEthernetCapabilityRXCSUM               \
		      ,"RXCSUM"                                         \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetEthernetCapabilityTSO, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetEthernetCapabilityTSO                               \
	  SC_SCHEMA_KV(kSCPropNetEthernetCapabilityTSO                  \
		      ,"TSO"                                            \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetEthernetCapabilityTSO4, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetEthernetCapabilityTSO4                              \
	  SC_SCHEMA_KV(kSCPropNetEthernetCapabilityTSO4                 \
		      ,"TSO4"                                           \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetEthernetCapabilityTSO6, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetEthernetCapabilityTSO6                              \
	  SC_SCHEMA_KV(kSCPropNetEthernetCapabilityTSO6                 \
		      ,"TSO6"                                           \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetEthernetCapabilityTXCSUM, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetEthernetCapabilityTXCSUM                            \
	  SC_SCHEMA_KV(kSCPropNetEthernetCapabilityTXCSUM               \
		      ,"TXCSUM"                                         \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetEthernetCapabilityVLAN_HWTAGGING, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetEthernetCapabilityVLAN_HWTAGGING                    \
	  SC_SCHEMA_KV(kSCPropNetEthernetCapabilityVLAN_HWTAGGING       \
		      ,"VLAN_HWTAGGING"                                 \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetEthernetCapabilityVLAN_MTU, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetEthernetCapabilityVLAN_MTU                          \
	  SC_SCHEMA_KV(kSCPropNetEthernetCapabilityVLAN_MTU             \
		      ,"VLAN_MTU"                                       \
		      ,CFNumber (0 or 1)                                )


  SC_SCHEMA_DECLARATION(kSCValNetInterfaceTypeLoopback, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCValNetInterfaceTypeLoopback                                \
	  SC_SCHEMA_KV(kSCValNetInterfaceTypeLoopback                   \
		      ,"Loopback"                                       \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetInterfaceTypeVPN, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCValNetInterfaceTypeVPN                                     \
	  SC_SCHEMA_KV(kSCValNetInterfaceTypeVPN                        \
		      ,"VPN"                                            \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCPropNetIPSecDisconnectOnWake, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetIPSecDisconnectOnWake                               \
	  SC_SCHEMA_KV(kSCPropNetIPSecDisconnectOnWake                  \
		      ,"DisconnectOnWake"                               \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetIPSecDisconnectOnWakeTimer, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetIPSecDisconnectOnWakeTimer                          \
	  SC_SCHEMA_KV(kSCPropNetIPSecDisconnectOnWakeTimer             \
		      ,"DisconnectOnWakeTimer"                          \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetIPSecLastCause, __OSX_AVAILABLE_STARTING(__MAC_10_6,__IPHONE_3_0/*SPI*/))
  #define kSCPropNetIPSecLastCause                                      \
	  SC_SCHEMA_KV(kSCPropNetIPSecLastCause                         \
		      ,"LastCause"                                      \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetIPSecOnDemandEnabled, __OSX_AVAILABLE_STARTING(__MAC_10_6,__IPHONE_3_0/*SPI*/))
  #define kSCPropNetIPSecOnDemandEnabled                                \
	  SC_SCHEMA_KV(kSCPropNetIPSecOnDemandEnabled                   \
		      ,"OnDemandEnabled"                                \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetIPSecOnDemandMatchDomainsAlways, __OSX_AVAILABLE_STARTING(__MAC_10_6,__IPHONE_3_0/*SPI*/))
  #define kSCPropNetIPSecOnDemandMatchDomainsAlways                     \
	  SC_SCHEMA_KV(kSCPropNetIPSecOnDemandMatchDomainsAlways        \
		      ,"OnDemandMatchDomainsAlways"                     \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetIPSecOnDemandMatchDomainsOnRetry, __OSX_AVAILABLE_STARTING(__MAC_10_6,__IPHONE_3_0/*SPI*/))
  #define kSCPropNetIPSecOnDemandMatchDomainsOnRetry                    \
	  SC_SCHEMA_KV(kSCPropNetIPSecOnDemandMatchDomainsOnRetry       \
		      ,"OnDemandMatchDomainsOnRetry"                    \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetIPSecOnDemandMatchDomainsNever, __OSX_AVAILABLE_STARTING(__MAC_10_6,__IPHONE_3_0/*SPI*/))
  #define kSCPropNetIPSecOnDemandMatchDomainsNever                      \
	  SC_SCHEMA_KV(kSCPropNetIPSecOnDemandMatchDomainsNever         \
		      ,"OnDemandMatchDomainsNever"                      \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv4AdditionalRoutes, __OSX_AVAILABLE_STARTING(__MAC_10_10,__IPHONE_8_0/*SPI*/))
  #define kSCPropNetIPv4AdditionalRoutes                                \
	  SC_SCHEMA_KV(kSCPropNetIPv4AdditionalRoutes                   \
		      ,"AdditionalRoutes"                               \
		      ,CFArray[CFDictionary]                            )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv4ExcludedRoutes, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetIPv4ExcludedRoutes                                  \
	  SC_SCHEMA_KV(kSCPropNetIPv4ExcludedRoutes                     \
		      ,"ExcludedRoutes"                                 \
		      ,CFArray[CFDictionary]                            )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv4IncludedRoutes, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetIPv4IncludedRoutes                                  \
	  SC_SCHEMA_KV(kSCPropNetIPv4IncludedRoutes                     \
		      ,"IncludedRoutes"                                 \
		      ,CFArray[CFDictionary]                            )

  SC_SCHEMA_DECLARATION(kSCValNetIPv4ConfigMethodFailover, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCValNetIPv4ConfigMethodFailover                             \
	  SC_SCHEMA_KV(kSCValNetIPv4ConfigMethodFailover                \
		      ,"Failover"                                       \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv4RouteDestinationAddress, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetIPv4RouteDestinationAddress                         \
	  SC_SCHEMA_KV(kSCPropNetIPv4RouteDestinationAddress            \
		      ,"DestinationAddress"                             \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv4RouteSubnetMask, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetIPv4RouteSubnetMask                                 \
	  SC_SCHEMA_KV(kSCPropNetIPv4RouteSubnetMask                    \
		      ,"SubnetMask"                                     \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv4RouteGatewayAddress, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetIPv4RouteGatewayAddress                             \
	  SC_SCHEMA_KV(kSCPropNetIPv4RouteGatewayAddress                \
		      ,"GatewayAddress"                                 \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv4RouteInterfaceName, __OSX_AVAILABLE_STARTING(__MAC_10_10,__IPHONE_8_0/*SPI*/))
  #define kSCPropNetIPv4RouteInterfaceName                              \
	  SC_SCHEMA_KV(kSCPropNetIPv4RouteInterfaceName                 \
		      ,"InterfaceName"                                  \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv4ARPResolvedHardwareAddress, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetIPv4ARPResolvedHardwareAddress                      \
	  SC_SCHEMA_KV(kSCPropNetIPv4ARPResolvedHardwareAddress         \
		      ,"ARPResolvedHardwareAddress"                     \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv4ARPResolvedIPAddress, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetIPv4ARPResolvedIPAddress                            \
	  SC_SCHEMA_KV(kSCPropNetIPv4ARPResolvedIPAddress               \
		      ,"ARPResolvedIPAddress"                           \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv6AdditionalRoutes, __OSX_AVAILABLE_STARTING(__MAC_10_10,__IPHONE_8_0/*SPI*/))
  #define kSCPropNetIPv6AdditionalRoutes                                \
	  SC_SCHEMA_KV(kSCPropNetIPv6AdditionalRoutes                   \
		      ,"AdditionalRoutes"                               \
		      ,CFArray[CFDictionary]                            )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv6ExcludedRoutes, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetIPv6ExcludedRoutes                                  \
	  SC_SCHEMA_KV(kSCPropNetIPv6ExcludedRoutes                     \
		      ,"ExcludedRoutes"                                 \
		      ,CFArray[CFDictionary]                            )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv6IncludedRoutes, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetIPv6IncludedRoutes                                  \
	  SC_SCHEMA_KV(kSCPropNetIPv6IncludedRoutes                     \
		      ,"IncludedRoutes"                                 \
		      ,CFArray[CFDictionary]                            )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv6RouteDestinationAddress, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetIPv6RouteDestinationAddress                         \
	  SC_SCHEMA_KV(kSCPropNetIPv6RouteDestinationAddress            \
		      ,"DestinationAddress"                             \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv6RoutePrefixLength, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetIPv6RoutePrefixLength                               \
	  SC_SCHEMA_KV(kSCPropNetIPv6RoutePrefixLength                  \
		      ,"PrefixLength"                                   \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv6RouteGatewayAddress, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetIPv6RouteGatewayAddress                             \
	  SC_SCHEMA_KV(kSCPropNetIPv6RouteGatewayAddress                \
		      ,"GatewayAddress"                                 \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetIPv6RouteInterfaceName, __OSX_AVAILABLE_STARTING(__MAC_10_10,__IPHONE_8_0/*SPI*/))
  #define kSCPropNetIPv6RouteInterfaceName                              \
	  SC_SCHEMA_KV(kSCPropNetIPv6RouteInterfaceName                 \
		      ,"InterfaceName"                                  \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetLinkExpensive, __OSX_AVAILABLE_STARTING(__MAC_10_10,__IPHONE_8_0/*SPI*/))
  #define kSCPropNetLinkExpensive                                       \
	  SC_SCHEMA_KV(kSCPropNetLinkExpensive                          \
		      ,"Expensive"                                      \
		      ,CFBoolean                                        )

  SC_SCHEMA_DECLARATION(kSCPropNetLinkIssuesModuleID, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetLinkIssuesModuleID                                  \
	  SC_SCHEMA_KV(kSCPropNetLinkIssuesModuleID                     \
		      ,"ModuleID"                                       \
		      ,CFData                                           )

  SC_SCHEMA_DECLARATION(kSCPropNetLinkIssuesInfo, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetLinkIssuesInfo                                      \
	  SC_SCHEMA_KV(kSCPropNetLinkIssuesInfo                         \
		      ,"Info"                                           \
		      ,CFData                                           )

  SC_SCHEMA_DECLARATION(kSCPropNetLinkIssuesTimeStamp, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetLinkIssuesTimeStamp                                 \
	  SC_SCHEMA_KV(kSCPropNetLinkIssuesTimeStamp                    \
		      ,"TimeStamp"                                      \
		      ,CFDATE                                           )

  SC_SCHEMA_DECLARATION(kSCPropNetLinkQuality, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetLinkQuality                                         \
	  SC_SCHEMA_KV(kSCPropNetLinkQuality                            \
		      ,"LinkQuality"                                    \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetPPPDisconnectOnWake, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetPPPDisconnectOnWake                                 \
	  SC_SCHEMA_KV(kSCPropNetPPPDisconnectOnWake                    \
		      ,"DisconnectOnWake"                               \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetPPPDisconnectOnWakeTimer, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetPPPDisconnectOnWakeTimer                            \
	  SC_SCHEMA_KV(kSCPropNetPPPDisconnectOnWakeTimer               \
		      ,"DisconnectOnWakeTimer"                          \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetPPPOnDemandDomains, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropNetPPPOnDemandDomains                                  \
	  SC_SCHEMA_KV(kSCPropNetPPPOnDemandDomains                     \
		      ,"OnDemandDomains"                                \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetPPPOnDemandEnabled, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropNetPPPOnDemandEnabled                                  \
	  SC_SCHEMA_KV(kSCPropNetPPPOnDemandEnabled                     \
		      ,"OnDemandEnabled"                                \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetPPPOnDemandHostName, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropNetPPPOnDemandHostName                                 \
	  SC_SCHEMA_KV(kSCPropNetPPPOnDemandHostName                    \
		      ,"OnDemandHostName"                               \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetPPPOnDemandMatchDomainsAlways, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetPPPOnDemandMatchDomainsAlways                       \
	  SC_SCHEMA_KV(kSCPropNetPPPOnDemandMatchDomainsAlways          \
		      ,"OnDemandMatchDomainsAlways"                     \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetPPPOnDemandMatchDomainsOnRetry, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetPPPOnDemandMatchDomainsOnRetry                      \
	  SC_SCHEMA_KV(kSCPropNetPPPOnDemandMatchDomainsOnRetry         \
		      ,"OnDemandMatchDomainsOnRetry"                    \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetPPPOnDemandMatchDomainsNever, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetPPPOnDemandMatchDomainsNever                        \
	  SC_SCHEMA_KV(kSCPropNetPPPOnDemandMatchDomainsNever           \
		      ,"OnDemandMatchDomainsNever"                      \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetPPPOnDemandMode, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropNetPPPOnDemandMode                                     \
	  SC_SCHEMA_KV(kSCPropNetPPPOnDemandMode                        \
		      ,"OnDemandMode"                                   \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetPPPOnDemandPriority, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropNetPPPOnDemandPriority                                 \
	  SC_SCHEMA_KV(kSCPropNetPPPOnDemandPriority                    \
		      ,"OnDemandPriority"                               \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCValNetPPPOnDemandModeAggressive, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCValNetPPPOnDemandModeAggressive                            \
	  SC_SCHEMA_KV(kSCValNetPPPOnDemandModeAggressive               \
		      ,"Aggressive"                                     \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetPPPOnDemandModeConservative, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCValNetPPPOnDemandModeConservative                          \
	  SC_SCHEMA_KV(kSCValNetPPPOnDemandModeConservative             \
		      ,"Conservative"                                   \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetPPPOnDemandModeCompatible, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCValNetPPPOnDemandModeCompatible                            \
	  SC_SCHEMA_KV(kSCValNetPPPOnDemandModeCompatible               \
		      ,"Compatible"                                     \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetPPPOnDemandPriorityDefault, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCValNetPPPOnDemandPriorityDefault                           \
	  SC_SCHEMA_KV(kSCValNetPPPOnDemandPriorityDefault              \
		      ,"Default"                                        \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetPPPOnDemandPriorityHigh, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCValNetPPPOnDemandPriorityHigh                              \
	  SC_SCHEMA_KV(kSCValNetPPPOnDemandPriorityHigh                 \
		      ,"High"                                           \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetPPPOnDemandPriorityLow, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCValNetPPPOnDemandPriorityLow                               \
	  SC_SCHEMA_KV(kSCValNetPPPOnDemandPriorityLow                  \
		      ,"Low"                                            \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCPropNetProxiesBypassAllowed, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetProxiesBypassAllowed                                \
	  SC_SCHEMA_KV(kSCPropNetProxiesBypassAllowed                   \
		      ,"BypassAllowed"                                  \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetProxiesFallBackAllowed, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_6_0/*SPI*/))
  #define kSCPropNetProxiesFallBackAllowed                              \
	  SC_SCHEMA_KV(kSCPropNetProxiesFallBackAllowed                 \
		      ,"FallBackAllowed"                                \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetProxiesSupplementalMatchDomains, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetProxiesSupplementalMatchDomains                     \
	  SC_SCHEMA_KV(kSCPropNetProxiesSupplementalMatchDomains        \
		      ,"SupplementalMatchDomains"                       \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetProxiesSupplementalMatchOrders, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetProxiesSupplementalMatchOrders                      \
	  SC_SCHEMA_KV(kSCPropNetProxiesSupplementalMatchOrders         \
		      ,"SupplementalMatchOrders"                        \
		      ,CFArray[CFNumber]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetProxiesScoped, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetProxiesScoped                                       \
	  SC_SCHEMA_KV(kSCPropNetProxiesScoped                          \
		      ,"__SCOPED__"                                     \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCPropNetProxiesServices, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetProxiesServices                                     \
	  SC_SCHEMA_KV(kSCPropNetProxiesServices                        \
		      ,"__SERVICES__"                                   \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCPropNetProxiesSupplemental, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetProxiesSupplemental                                 \
	  SC_SCHEMA_KV(kSCPropNetProxiesSupplemental                    \
		      ,"__SUPPLEMENTAL__"                               \
		      ,CFArray[CFDictionary]                            )

  SC_SCHEMA_DECLARATION(kSCPropNetProxiesSupplementalMatchDomain, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_5_0/*SPI*/))
  #define kSCPropNetProxiesSupplementalMatchDomain                      \
	  SC_SCHEMA_KV(kSCPropNetProxiesSupplementalMatchDomain         \
		      ,"__MATCH_DOMAIN__"                               \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetServicePrimaryRank, __OSX_AVAILABLE_STARTING(__MAC_10_6,__IPHONE_2_0/*SPI*/))
  #define kSCPropNetServicePrimaryRank                                  \
	  SC_SCHEMA_KV(kSCPropNetServicePrimaryRank                     \
		      ,"PrimaryRank"                                    \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetServiceUserDefinedName, __OSX_AVAILABLE_STARTING(__MAC_10_6,__IPHONE_2_0/*SPI*/))
  #define kSCPropNetServiceUserDefinedName                              \
	  SC_SCHEMA_KV(kSCPropNetServiceUserDefinedName                 \
		      ,"UserDefinedName"                                \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCValNetServicePrimaryRankFirst, __OSX_AVAILABLE_STARTING(__MAC_10_6,__IPHONE_2_0/*SPI*/))
  #define kSCValNetServicePrimaryRankFirst                              \
	  SC_SCHEMA_KV(kSCValNetServicePrimaryRankFirst                 \
		      ,"First"                                          \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetServicePrimaryRankLast, __OSX_AVAILABLE_STARTING(__MAC_10_6,__IPHONE_2_0/*SPI*/))
  #define kSCValNetServicePrimaryRankLast                               \
	  SC_SCHEMA_KV(kSCValNetServicePrimaryRankLast                  \
		      ,"Last"                                           \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetServicePrimaryRankNever, __OSX_AVAILABLE_STARTING(__MAC_10_6,__IPHONE_2_0/*SPI*/))
  #define kSCValNetServicePrimaryRankNever                              \
	  SC_SCHEMA_KV(kSCValNetServicePrimaryRankNever                 \
		      ,"Never"                                          \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetServicePrimaryRankScoped, __OSX_AVAILABLE_STARTING(__MAC_10_10,__IPHONE_8_0/*SPI*/))
  #define kSCValNetServicePrimaryRankScoped                             \
	  SC_SCHEMA_KV(kSCValNetServicePrimaryRankScoped                \
		      ,"Scoped"                                         \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNAppRules, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNAppRules                                         \
	  SC_SCHEMA_KV(kSCPropNetVPNAppRules                            \
		      ,"AppRules"                                       \
		      ,CFArray[CFDictionary]                            )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNAuthCredentialPassword, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNAuthCredentialPassword                           \
	  SC_SCHEMA_KV(kSCPropNetVPNAuthCredentialPassword              \
		      ,"AuthCredentialPassword"                         \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNAuthName, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNAuthName                                         \
	  SC_SCHEMA_KV(kSCPropNetVPNAuthName                            \
		      ,"AuthName"                                       \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNAuthPassword, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNAuthPassword                                     \
	  SC_SCHEMA_KV(kSCPropNetVPNAuthPassword                        \
		      ,"AuthPassword"                                   \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNAuthPasswordEncryption, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNAuthPasswordEncryption                           \
	  SC_SCHEMA_KV(kSCPropNetVPNAuthPasswordEncryption              \
		      ,"AuthPasswordEncryption"                         \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNAuthPasswordPluginType, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNAuthPasswordPluginType                           \
	  SC_SCHEMA_KV(kSCPropNetVPNAuthPasswordPluginType              \
		      ,"AuthPasswordPluginType"                         \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNAuthenticationMethod, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNAuthenticationMethod                             \
	  SC_SCHEMA_KV(kSCPropNetVPNAuthenticationMethod                \
		      ,"AuthenticationMethod"                           \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNConnectTime, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNConnectTime                                      \
	  SC_SCHEMA_KV(kSCPropNetVPNConnectTime                         \
		      ,"ConnectTime"                                    \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNDisconnectOnFastUserSwitch, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNDisconnectOnFastUserSwitch                       \
	  SC_SCHEMA_KV(kSCPropNetVPNDisconnectOnFastUserSwitch          \
		      ,"DisconnectOnFastUserSwitch"                     \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNDisconnectOnIdle, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNDisconnectOnIdle                                 \
	  SC_SCHEMA_KV(kSCPropNetVPNDisconnectOnIdle                    \
		      ,"DisconnectOnIdle"                               \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNDisconnectOnIdleTimer, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNDisconnectOnIdleTimer                            \
	  SC_SCHEMA_KV(kSCPropNetVPNDisconnectOnIdleTimer               \
		      ,"DisconnectOnIdleTimer"                          \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNDisconnectOnLogout, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNDisconnectOnLogout                               \
	  SC_SCHEMA_KV(kSCPropNetVPNDisconnectOnLogout                  \
		      ,"DisconnectOnLogout"                             \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNDisconnectOnSleep, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNDisconnectOnSleep                                \
	  SC_SCHEMA_KV(kSCPropNetVPNDisconnectOnSleep                   \
		      ,"DisconnectOnSleep"                              \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNDisconnectOnWake, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNDisconnectOnWake                                 \
	  SC_SCHEMA_KV(kSCPropNetVPNDisconnectOnWake                    \
		      ,"DisconnectOnWake"                               \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNDisconnectOnWakeTimer, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNDisconnectOnWakeTimer                            \
	  SC_SCHEMA_KV(kSCPropNetVPNDisconnectOnWakeTimer               \
		      ,"DisconnectOnWakeTimer"                          \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNLocalCertificate, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNLocalCertificate                                 \
	  SC_SCHEMA_KV(kSCPropNetVPNLocalCertificate                    \
		      ,"LocalCertificate"                               \
		      ,CFData                                           )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNLogfile, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNLogfile                                          \
	  SC_SCHEMA_KV(kSCPropNetVPNLogfile                             \
		      ,"Logfile"                                        \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNMTU, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNMTU                                              \
	  SC_SCHEMA_KV(kSCPropNetVPNMTU                                 \
		      ,"MTU"                                            \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandEnabled, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNOnDemandEnabled                                  \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandEnabled                     \
		      ,"OnDemandEnabled"                                \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandMatchAppEnabled, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNOnDemandMatchAppEnabled                          \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandMatchAppEnabled             \
		      ,"OnDemandMatchAppEnabled"                        \
		      ,CFBoolean                                        )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandMatchDomainsAlways, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNOnDemandMatchDomainsAlways                       \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandMatchDomainsAlways          \
		      ,"OnDemandMatchDomainsAlways"                     \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandMatchDomainsOnRetry, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNOnDemandMatchDomainsOnRetry                      \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandMatchDomainsOnRetry         \
		      ,"OnDemandMatchDomainsOnRetry"                    \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandMatchDomainsNever, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNOnDemandMatchDomainsNever                        \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandMatchDomainsNever           \
		      ,"OnDemandMatchDomainsNever"                      \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandRules, __OSX_AVAILABLE_STARTING(__MAC_10_8,__IPHONE_6_0/*SPI*/))
  #define kSCPropNetVPNOnDemandRules                                    \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandRules                       \
		      ,"OnDemandRules"                                  \
		      ,CFArray[CFDictionary]                            )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandSuspended, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNOnDemandSuspended                                \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandSuspended                   \
		      ,"OnDemandSuspended"                              \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNPluginCapability, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNPluginCapability                                 \
	  SC_SCHEMA_KV(kSCPropNetVPNPluginCapability                    \
		      ,"PluginCapability"                               \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNRemoteAddress, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNRemoteAddress                                    \
	  SC_SCHEMA_KV(kSCPropNetVPNRemoteAddress                       \
		      ,"RemoteAddress"                                  \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNStatus, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNStatus                                           \
	  SC_SCHEMA_KV(kSCPropNetVPNStatus                              \
		      ,"Status"                                         \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNVerboseLogging, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropNetVPNVerboseLogging                                   \
	  SC_SCHEMA_KV(kSCPropNetVPNVerboseLogging                      \
		      ,"VerboseLogging"                                 \
		      ,CFNumber (0 or 1)                                )

  SC_SCHEMA_DECLARATION(kSCValNetVPNAppRuleAccountIdentifierMatch, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNAppRuleAccountIdentifierMatch                     \
	  SC_SCHEMA_KV(kSCValNetVPNAppRuleAccountIdentifierMatch        \
		      ,"AccountIdentifierMatch"                         \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCValNetVPNAppRuleDNSDomainMatch, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNAppRuleDNSDomainMatch                             \
	  SC_SCHEMA_KV(kSCValNetVPNAppRuleDNSDomainMatch                \
		      ,"DNSDomainMatch"                                 \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCValNetVPNAppRuleExecutableMatch, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNAppRuleExecutableMatch                            \
	  SC_SCHEMA_KV(kSCValNetVPNAppRuleExecutableMatch               \
		      ,"ExecutableMatch"                                \
		      ,CFArray[CFDictionary]                            )

  SC_SCHEMA_DECLARATION(kSCValNetVPNAppRuleIdentifier, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNAppRuleIdentifier                                 \
	  SC_SCHEMA_KV(kSCValNetVPNAppRuleIdentifier                    \
		      ,"Identifier"                                     \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCValNetVPNAppRuleExecutableDesignatedRequirement, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNAppRuleExecutableDesignatedRequirement              \
	  SC_SCHEMA_KV(kSCValNetVPNAppRuleExecutableDesignatedRequirement \
		      ,"DesignatedRequirement"                          \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCValNetVPNAppRuleExecutableSigningIdentifier, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNAppRuleExecutableSigningIdentifier                \
	  SC_SCHEMA_KV(kSCValNetVPNAppRuleExecutableSigningIdentifier   \
		      ,"SigningIdentifier"                              \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCValNetVPNAppRuleExecutableUUID, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNAppRuleExecutableUUID                             \
	  SC_SCHEMA_KV(kSCValNetVPNAppRuleExecutableUUID                \
		      ,"UUID"                                           \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCValNetVPNAuthenticationMethodPassword, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCValNetVPNAuthenticationMethodPassword                      \
	  SC_SCHEMA_KV(kSCValNetVPNAuthenticationMethodPassword         \
		      ,"Password"                                       \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetVPNAuthenticationMethodCertificate, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCValNetVPNAuthenticationMethodCertificate                   \
	  SC_SCHEMA_KV(kSCValNetVPNAuthenticationMethodCertificate      \
		      ,"Certificate"                                    \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetVPNAuthPasswordEncryptionExternal, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNAuthPasswordEncryptionExternal                    \
	  SC_SCHEMA_KV(kSCValNetVPNAuthPasswordEncryptionExternal       \
		      ,"External"                                       \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetVPNAuthPasswordEncryptionKeychain, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCValNetVPNAuthPasswordEncryptionKeychain                    \
	  SC_SCHEMA_KV(kSCValNetVPNAuthPasswordEncryptionKeychain       \
		      ,"Keychain"                                       \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetVPNAuthPasswordEncryptionPrompt, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCValNetVPNAuthPasswordEncryptionPrompt                      \
	  SC_SCHEMA_KV(kSCValNetVPNAuthPasswordEncryptionPrompt         \
		      ,"Prompt"                                         \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandRuleAction, __OSX_AVAILABLE_STARTING(__MAC_10_8,__IPHONE_6_0/*SPI*/))
  #define kSCPropNetVPNOnDemandRuleAction                               \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandRuleAction                  \
		      ,"Action"                                         \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandRuleActionParameters, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNOnDemandRuleActionParameters                     \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandRuleActionParameters        \
		      ,"ActionParameters"                               \
		      ,CFArray[CFDictionary]                            )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandRuleDNSDomainMatch, __OSX_AVAILABLE_STARTING(__MAC_10_8,__IPHONE_6_0/*SPI*/))
  #define kSCPropNetVPNOnDemandRuleDNSDomainMatch                       \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandRuleDNSDomainMatch          \
		      ,"DNSDomainMatch"                                 \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandRuleDNSServerAddressMatch, __OSX_AVAILABLE_STARTING(__MAC_10_8,__IPHONE_6_0/*SPI*/))
  #define kSCPropNetVPNOnDemandRuleDNSServerAddressMatch                \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandRuleDNSServerAddressMatch   \
		      ,"DNSServerAddressMatch"                          \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandRuleSSIDMatch, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNOnDemandRuleSSIDMatch                            \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandRuleSSIDMatch               \
		      ,"SSIDMatch"                                      \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandRuleInterfaceTypeMatch, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNOnDemandRuleInterfaceTypeMatch                   \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandRuleInterfaceTypeMatch      \
		      ,"InterfaceTypeMatch"                             \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandRuleURLStringProbe, __OSX_AVAILABLE_STARTING(__MAC_10_8,__IPHONE_6_0/*SPI*/))
  #define kSCPropNetVPNOnDemandRuleURLStringProbe                       \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandRuleURLStringProbe          \
		      ,"URLStringProbe"                                 \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCValNetVPNOnDemandRuleActionAllow, __OSX_AVAILABLE_STARTING(__MAC_10_8,__IPHONE_6_0/*SPI*/))
  #define kSCValNetVPNOnDemandRuleActionAllow                           \
	  SC_SCHEMA_KV(kSCValNetVPNOnDemandRuleActionAllow              \
		      ,"Allow"                                          \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetVPNOnDemandRuleActionIgnore, __OSX_AVAILABLE_STARTING(__MAC_10_8,__IPHONE_6_0/*SPI*/))
  #define kSCValNetVPNOnDemandRuleActionIgnore                          \
	  SC_SCHEMA_KV(kSCValNetVPNOnDemandRuleActionIgnore             \
		      ,"Ignore"                                         \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetVPNOnDemandRuleActionConnect, __OSX_AVAILABLE_STARTING(__MAC_10_8,__IPHONE_6_0/*SPI*/))
  #define kSCValNetVPNOnDemandRuleActionConnect                         \
	  SC_SCHEMA_KV(kSCValNetVPNOnDemandRuleActionConnect            \
		      ,"Connect"                                        \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetVPNOnDemandRuleActionDisconnect, __OSX_AVAILABLE_STARTING(__MAC_10_8,__IPHONE_6_0/*SPI*/))
  #define kSCValNetVPNOnDemandRuleActionDisconnect                      \
	  SC_SCHEMA_KV(kSCValNetVPNOnDemandRuleActionDisconnect         \
		      ,"Disconnect"                                     \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetVPNOnDemandRuleActionEvaluateConnection, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNOnDemandRuleActionEvaluateConnection              \
	  SC_SCHEMA_KV(kSCValNetVPNOnDemandRuleActionEvaluateConnection \
		      ,"EvaluateConnection"                             \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandRuleActionParametersDomainAction, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNOnDemandRuleActionParametersDomainAction              \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandRuleActionParametersDomainAction \
		      ,"DomainAction"                                   \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandRuleActionParametersDomains, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNOnDemandRuleActionParametersDomains              \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandRuleActionParametersDomains \
		      ,"Domains"                                        \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandRuleActionParametersRequiredDNSServers, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNOnDemandRuleActionParametersRequiredDNSServers              \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandRuleActionParametersRequiredDNSServers \
		      ,"RequiredDNSServers"                             \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropNetVPNOnDemandRuleActionParametersRequiredURLStringProbe, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCPropNetVPNOnDemandRuleActionParametersRequiredURLStringProbe              \
	  SC_SCHEMA_KV(kSCPropNetVPNOnDemandRuleActionParametersRequiredURLStringProbe \
		      ,"RequiredURLStringProbe"                         \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCValNetVPNOnDemandRuleActionParametersDomainActionConnectIfNeeded, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNOnDemandRuleActionParametersDomainActionConnectIfNeeded              \
	  SC_SCHEMA_KV(kSCValNetVPNOnDemandRuleActionParametersDomainActionConnectIfNeeded \
		      ,"ConnectIfNeeded"                                \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetVPNOnDemandRuleActionParametersDomainActionNeverConnect, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNOnDemandRuleActionParametersDomainActionNeverConnect              \
	  SC_SCHEMA_KV(kSCValNetVPNOnDemandRuleActionParametersDomainActionNeverConnect \
		      ,"NeverConnect"                                   \
		      ,                                                 )


  SC_SCHEMA_DECLARATION(kSCValNetVPNOnDemandRuleInterfaceTypeMatchEthernet, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNOnDemandRuleInterfaceTypeMatchEthernet              \
	  SC_SCHEMA_KV(kSCValNetVPNOnDemandRuleInterfaceTypeMatchEthernet \
		      ,"Ethernet"                                       \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetVPNOnDemandRuleInterfaceTypeMatchWiFi, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNOnDemandRuleInterfaceTypeMatchWiFi                \
	  SC_SCHEMA_KV(kSCValNetVPNOnDemandRuleInterfaceTypeMatchWiFi   \
		      ,"WiFi"                                           \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetVPNPluginCapabilityAuth, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNPluginCapabilityAuth                              \
	  SC_SCHEMA_KV(kSCValNetVPNPluginCapabilityAuth                 \
		      ,"Auth"                                           \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCValNetVPNPluginCapabilityConnect, __OSX_AVAILABLE_STARTING(__MAC_10_9,__IPHONE_7_0/*SPI*/))
  #define kSCValNetVPNPluginCapabilityConnect                           \
	  SC_SCHEMA_KV(kSCValNetVPNPluginCapabilityConnect              \
		      ,"Connect"                                        \
		      ,                                                 )

  SC_SCHEMA_DECLARATION(kSCPropSystemComputerNameRegion, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropSystemComputerNameRegion                               \
	  SC_SCHEMA_KV(kSCPropSystemComputerNameRegion                  \
		      ,"ComputerNameRegion"                             \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropSystemHostName, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropSystemHostName                                         \
	  SC_SCHEMA_KV(kSCPropSystemHostName                            \
		      ,"HostName"                                       \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropVirtualNetworkInterfacesBondInterfaces, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropVirtualNetworkInterfacesBondInterfaces                 \
	  SC_SCHEMA_KV(kSCPropVirtualNetworkInterfacesBondInterfaces    \
		      ,"Interfaces"                                     \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropVirtualNetworkInterfacesBondMode, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropVirtualNetworkInterfacesBondMode                       \
	  SC_SCHEMA_KV(kSCPropVirtualNetworkInterfacesBondMode          \
		      ,"Mode"                                           \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropVirtualNetworkInterfacesBondOptions, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropVirtualNetworkInterfacesBondOptions                    \
	  SC_SCHEMA_KV(kSCPropVirtualNetworkInterfacesBondOptions       \
		      ,"Options"                                        \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCPropVirtualNetworkInterfacesBridgeInterfaces, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropVirtualNetworkInterfacesBridgeInterfaces               \
	  SC_SCHEMA_KV(kSCPropVirtualNetworkInterfacesBridgeInterfaces  \
		      ,"Interfaces"                                     \
		      ,CFArray[CFString]                                )

  SC_SCHEMA_DECLARATION(kSCPropVirtualNetworkInterfacesBridgeOptions, __OSX_AVAILABLE_STARTING(__MAC_10_7,__IPHONE_4_0/*SPI*/))
  #define kSCPropVirtualNetworkInterfacesBridgeOptions                  \
	  SC_SCHEMA_KV(kSCPropVirtualNetworkInterfacesBridgeOptions     \
		      ,"Options"                                        \
		      ,CFDictionary                                     )

  SC_SCHEMA_DECLARATION(kSCPropVirtualNetworkInterfacesVLANInterface, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropVirtualNetworkInterfacesVLANInterface                  \
	  SC_SCHEMA_KV(kSCPropVirtualNetworkInterfacesVLANInterface     \
		      ,"Interface"                                      \
		      ,CFString                                         )

  SC_SCHEMA_DECLARATION(kSCPropVirtualNetworkInterfacesVLANTag, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropVirtualNetworkInterfacesVLANTag                        \
	  SC_SCHEMA_KV(kSCPropVirtualNetworkInterfacesVLANTag           \
		      ,"Tag"                                            \
		      ,CFNumber                                         )

  SC_SCHEMA_DECLARATION(kSCPropVirtualNetworkInterfacesVLANOptions, __OSX_AVAILABLE_STARTING(__MAC_10_5,__IPHONE_2_0/*SPI*/))
  #define kSCPropVirtualNetworkInterfacesVLANOptions                    \
	  SC_SCHEMA_KV(kSCPropVirtualNetworkInterfacesVLANOptions       \
		      ,"Options"                                        \
		      ,CFDictionary                                     )

#endif	/* _SCSCHEMADEFINITIONSPRIVATE_H */
